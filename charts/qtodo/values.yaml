# Default values for qtodo
global:
  localClusterDomain: apps.example.com
  secretStore:
    name: "vault-backend"
    kind: "ClusterSecretStore"

# QTodo application configuration
app:
  name: qtodo
  images:
    main:
      name: quay.io/hybridcloudpatterns/qtodo
      tag: latest
      # Modified to Always to force a pull so we can test changes to the container image without requiring manual deletion of images or restarts of argo
      pullPolicy: Always
    spiffeHelper:
      name: ghcr.io/spiffe/spiffe-helper
      tag: 0.10.1
      pullPolicy: IfNotPresent
    spiffeVaultClient:
      name: registry.redhat.io/ubi9/python-311
      tag: latest
      pullPolicy: IfNotPresent

  oidc:
    enabled: false  # Will be enabled when SPIFFE is enabled
    authServerUrl: ""
    clientId: qtodo-app
    clientSecret: ""  # Retrieved dynamically via SPIFFE from Vault
    applicationType: "web-app"
    authenticatedPaths: "/*"
    authenticatedPolicy: "authenticated"
  
  # Keycloak realm configuration
  keycloak:
    realm: "ztvp"
  
  spire:
    enabled: true   # Enable SPIFFE + OIDC integration by default
    sidecars: true
    audiences:
      - qtodo
      
  # Vault configuration for SPIFFE integration
  vault:
    url: ""
    role: "qtodo-role" 
    secretPath: "secret/data/global/keycloak-users"

  # OIDC External Secret configuration
  oidcSecret:
    enabled: true
    name: "oidc-client-secret"
    vaultPath: "secret/data/global/oidc-client-secret"

# PostgreSQL database configuration
postgresql:
  name: qtodo-db

  # Database configuration
  auth:
    secretName: qtodo-db-secret
    database: tasks
    username: qtodo_user
    passwordVaultKey: secret/data/global/qtodo
